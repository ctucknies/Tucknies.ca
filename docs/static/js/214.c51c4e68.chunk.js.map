{"version":3,"file":"static/js/214.c51c4e68.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/BriefcaseIcon.js","components/Experience.jsx","components/Header.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction BriefcaseIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BriefcaseIcon);\nexport default ForwardRef;","import React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { motion } from 'framer-motion';\r\nimport PropTypes from 'prop-types';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { BriefcaseIcon } from '@heroicons/react/24/outline';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\n\r\nfunction Experience({ header }) {\r\n  const { data, isLoading } = useQuery(\r\n    ['experiences'],\r\n    async () => {\r\n      const response = await fetch(endpoints.experiences);\r\n      if (!response.ok) throw new Error('Failed to fetch experience data');\r\n      return response.json();\r\n    }\r\n  );\r\n\r\n  if (isLoading) return <FallbackSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      <div className=\"pt-20 min-h-screen\">\r\n        <div className=\"max-w-4xl mx-auto px-4 py-8\">\r\n          {data && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.6 }}\r\n            >\r\n              <div className=\"relative\">\r\n                <div className=\"absolute left-4 top-0 bottom-0 w-0.5 bg-primary-600\"></div>\r\n                \r\n                {data.experiences?.map((exp, index) => (\r\n                  <motion.div\r\n                    key={exp.title + exp.dateText}\r\n                    initial={{ opacity: 0, x: -20 }}\r\n                    animate={{ opacity: 1, x: 0 }}\r\n                    transition={{ delay: index * 0.1, duration: 0.6 }}\r\n                    className=\"relative flex items-start mb-8\"\r\n                  >\r\n                    <div className=\"absolute left-0 w-8 h-8 bg-primary-600 rounded-full flex items-center justify-center z-10\">\r\n                      <BriefcaseIcon className=\"w-4 h-4 text-white\" />\r\n                    </div>\r\n                    \r\n                    <div className=\"ml-12 card p-6 w-full\">\r\n                      <div className=\"flex justify-between items-start mb-2\">\r\n                        <div>\r\n                          <h3 className=\"text-xl font-bold\">{exp.title}</h3>\r\n                          {exp.subtitle && (\r\n                            <p className=\"text-gray-600 dark:text-gray-400\">{exp.subtitle}</p>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <span className=\"text-sm text-primary-600 font-medium\">{exp.dateText}</span>\r\n                          {exp.workType && (\r\n                            <p className=\"text-xs text-gray-500 mt-1 capitalize\">{exp.workType}</p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {exp.workDescription && (\r\n                        <div className=\"prose prose-sm dark:prose-invert mt-4\">\r\n                          {exp.workDescription.map((desc, descIndex) => (\r\n                            <ReactMarkdown key={descIndex}>{desc}</ReactMarkdown>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nExperience.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Experience;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Header({ title }) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n      className=\"fixed top-16 left-0 right-0 z-40 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md border-b border-gray-200 dark:border-gray-700\"\r\n    >\r\n      <div className=\"max-w-7xl mx-auto px-4 py-4\">\r\n        <h1 className=\"text-3xl font-bold text-center bg-gradient-to-r from-primary-600 to-purple-600 bg-clip-text text-transparent\">\r\n          {title}\r\n        </h1>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"],"names":["BriefcaseIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","_data$experiences","header","data","isLoading","useQuery","async","response","fetch","endpoints","experiences","ok","Error","json","_jsx","FallbackSpinner","_jsxs","_Fragment","children","Header","className","motion","div","initial","opacity","y","animate","transition","duration","map","exp","index","x","delay","subtitle","dateText","workType","workDescription","desc","descIndex","ReactMarkdown"],"sourceRoot":""}
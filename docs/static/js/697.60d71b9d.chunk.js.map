{"version":3,"file":"static/js/697.60d71b9d.chunk.js","mappings":"0KAyBA,QArBA,SAAeA,GAAa,IAAZ,MAAEC,GAAOD,EACvB,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,GAAI,IAC3BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxBC,UAAU,kIAAiIC,UAE3IV,EAAAA,EAAAA,KAAA,OAAKS,UAAU,8BAA6BC,UAC1CV,EAAAA,EAAAA,KAAA,MAAIS,UAAU,+GAA8GC,SACzHX,OAKX,C,uHC8DA,QAxEA,SAAeD,GAAc,IAADa,EAAA,IAAZ,OAAEC,GAAQd,EACxB,MAAM,KAAEe,EAAI,UAAEC,IAAcC,EAAAA,EAAAA,GAC1B,CAAC,UACDC,UACE,MAAMC,QAAiBC,MAAMC,EAAAA,EAAUC,QACvC,IAAKH,EAASI,GAAI,MAAM,IAAIC,MAAM,+BAClC,OAAOL,EAASM,SAIpB,OAAIT,GAAkBd,EAAAA,EAAAA,KAACwB,EAAAA,QAAe,KAGpCC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhB,SAAA,EACEV,EAAAA,EAAAA,KAAC2B,EAAAA,QAAM,CAAC5B,MAAOa,KACfZ,EAAAA,EAAAA,KAAA,OAAKS,UAAU,qBAAoBC,UACjCV,EAAAA,EAAAA,KAAA,OAAKS,UAAU,8BAA6BC,SACzCG,IACCY,EAAAA,EAAAA,MAACxB,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxBC,UAAU,aAAYC,SAAA,EAEtBV,EAAAA,EAAAA,KAAA,OAAKS,UAAU,oBAAmBC,UAChCV,EAAAA,EAAAA,KAAA,OAAKS,UAAU,2CAA0CC,UACvDV,EAAAA,EAAAA,KAAC4B,EAAAA,GAAa,CAAAlB,SAAEG,EAAKgB,YAIb,QAFNlB,EAELE,EAAKO,cAAM,IAAAT,OAAA,EAAXA,EAAamB,IAAI,CAACC,EAAUC,KAC3BP,EAAAA,EAAAA,MAACxB,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAE0B,MAAuB,GAAhBD,EAAqBxB,SAAU,IACpDC,UAAU,YAAWC,SAAA,EAErBV,EAAAA,EAAAA,KAAA,MAAIS,UAAU,sCAAqCC,SAAEqB,EAAShC,SAC9DC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,uDAAsDC,SAClEqB,EAASG,MAAMJ,IAAI,CAACK,EAAMC,KACzBX,EAAAA,EAAAA,MAACxB,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGiC,MAAO,IAC9B/B,QAAS,CAAEF,QAAS,EAAGiC,MAAO,GAC9B9B,WAAY,CAAE0B,MAAwB,GAAhBD,EAAoC,IAAZI,EAAmB5B,SAAU,IAC3E8B,WAAY,CAAED,MAAO,MACrB5B,UAAU,4HAA2HC,SAAA,EAErIV,EAAAA,EAAAA,KAAA,OACEuC,IAAKJ,EAAKK,KACVC,IAAKN,EAAKpC,MACVU,UAAU,mCAEZT,EAAAA,EAAAA,KAAA,KAAGS,UAAU,kCAAiCC,SAAEyB,EAAKpC,UAZhDoC,EAAKpC,YAVXgC,EAAShC,iBAkChC,C","sources":["components/Header.jsx","components/Skills.jsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Header({ title }) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n      className=\"fixed top-16 left-0 right-0 z-40 bg-white/80 dark:bg-gray-900/80 backdrop-blur-md border-b border-gray-200 dark:border-gray-700\"\r\n    >\r\n      <div className=\"max-w-7xl mx-auto px-4 py-4\">\r\n        <h1 className=\"text-3xl font-bold text-center bg-gradient-to-r from-primary-600 to-purple-600 bg-clip-text text-transparent\">\r\n          {title}\r\n        </h1>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { motion } from 'framer-motion';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\n\r\nfunction Skills({ header }) {\r\n  const { data, isLoading } = useQuery(\r\n    ['skills'],\r\n    async () => {\r\n      const response = await fetch(endpoints.skills);\r\n      if (!response.ok) throw new Error('Failed to fetch skills data');\r\n      return response.json();\r\n    }\r\n  );\r\n\r\n  if (isLoading) return <FallbackSpinner />;\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      <div className=\"pt-20 min-h-screen\">\r\n        <div className=\"max-w-6xl mx-auto px-4 py-8\">\r\n          {data && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.6 }}\r\n              className=\"space-y-12\"\r\n            >\r\n              <div className=\"text-center mb-12\">\r\n                <div className=\"prose prose-lg dark:prose-invert mx-auto\">\r\n                  <ReactMarkdown>{data.intro}</ReactMarkdown>\r\n                </div>\r\n              </div>\r\n\r\n              {data.skills?.map((category, categoryIndex) => (\r\n                <motion.div\r\n                  key={category.title}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ delay: categoryIndex * 0.1, duration: 0.6 }}\r\n                  className=\"space-y-6\"\r\n                >\r\n                  <h3 className=\"text-2xl font-bold text-center mb-8\">{category.title}</h3>\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-8\">\r\n                    {category.items.map((item, itemIndex) => (\r\n                      <motion.div\r\n                        key={item.title}\r\n                        initial={{ opacity: 0, scale: 0.8 }}\r\n                        animate={{ opacity: 1, scale: 1 }}\r\n                        transition={{ delay: (categoryIndex * 0.1) + (itemIndex * 0.05), duration: 0.4 }}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        className=\"flex flex-col items-center p-4 rounded-lg bg-white dark:bg-gray-800 shadow-lg hover:shadow-xl transition-all duration-200\"\r\n                      >\r\n                        <img\r\n                          src={item.icon}\r\n                          alt={item.title}\r\n                          className=\"w-16 h-16 mb-3 object-contain\"\r\n                        />\r\n                        <p className=\"text-sm font-medium text-center\">{item.title}</p>\r\n                      </motion.div>\r\n                    ))}\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nSkills.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Skills;\r\n"],"names":["_ref","title","_jsx","motion","div","initial","opacity","y","animate","transition","duration","className","children","_data$skills","header","data","isLoading","useQuery","async","response","fetch","endpoints","skills","ok","Error","json","FallbackSpinner","_jsxs","_Fragment","Header","ReactMarkdown","intro","map","category","categoryIndex","delay","items","item","itemIndex","scale","whileHover","src","icon","alt"],"sourceRoot":""}